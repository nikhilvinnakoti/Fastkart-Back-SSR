const mongoose = require("mongoose");
const CategoryImageSchema = {
  id: Number,
  collection_name: String,
  name: String,
  file_name: String,
  mime_type: String,
  disk: String,
  conversions_disk: String,
  size: Number,
  created_by_id: String,
  created_at: Date,
  updated_at: Date,
  original_url: String,
};

const CategorySchema = {
  id: Number,
  name: String,
  slug: String,
  description: String,
  category_image_id: Number,
  category_icon_id: Number,
  status: Number,
  type: String,
  commission_rate: { type: Number, default: null },
  parent_id: { type: Number, default: null },
  created_by_id: String,
  created_at: Date,
  updated_at: Date,
  deleted_at: { type: Date, default: null },
  blogs_count: Number,
  products_count: Number,
  pivot: {
    product_id: String,
    category_id: String
  },
  category_image: CategoryImageSchema,
  category_icon: CategoryImageSchema,
};

const TagSchema = {
  id: Number,
  name: String,
  slug: String,
  type: String,
  description: String,
  created_by_id: String,
  status: Number,
  created_at: Date,
  updated_at: Date,
  deleted_at: { type: Date, default: null },
  blogs_count: Number,
  products_count: Number,
  pivot: {
    product_id: String,
    tag_id: String
  }
};


const ProductSchema = new mongoose.Schema({
  id: Number,
  name: String,
  short_description: String,
  description: String,
  type: String,
  unit: String,
  weight: Number,
  quantity: Number,
  price: Number,
  sale_price: Number,
  discount: Number,
  is_featured: Boolean,
  shipping_days: Number,
  is_cod: Boolean,
  is_free_shipping: Boolean,
  is_sale_enable: Boolean,
  is_return: Boolean,
  is_trending: Boolean,
  is_approved: Boolean,
  sale_starts_at: Date,
  sale_expired_at: Date,
  sku: String,
  is_random_related_products: Boolean,
  stock_status: String,
  meta_title: String,
  meta_description: String,
  product_thumbnail_id: Number,
  product_meta_image_id: Number,
  size_chart_image_id: Number,
  estimated_delivery_text: String,
  return_policy_text: String,
  safe_checkout: Boolean,
  secure_checkout: Boolean,
  social_share: Boolean,
  encourage_order: Boolean,
  encourage_view: Boolean,
  slug: String,
  status: Number,
  store_id: Number,
  created_by_id: String,
  tax_id: Number,
  deleted_at: Date,
  created_at: Date,
  updated_at: Date,
  orders_count: Number,
  reviews_count: Number,
  can_review: Boolean,
  rating_count: Number,
  order_amount: Number,
  review_ratings: [Number],
  related_products: [Number],
  cross_sell_products: [Number],
  product_thumbnail: {
    id: Number,
    collection_name: String,
    name: String,
    file_name: String,
    mime_type: String,
    disk: String,
    conversions_disk: String,
    size: Number,
    created_by_id: String,
    created_at: Date,
    updated_at: Date,
    original_url: String,
  },
  product_galleries: [
    {
      id: Number,
      collection_name: String,
      name: String,
      file_name: String,
      mime_type: String,
      disk: String,
      conversions_disk: String,
      size: Number,
      created_by_id: String,
      created_at: Date,
      updated_at: Date,
      original_url: String,
    },
  ],
  product_meta_image: {
    id: Number,
    collection_name: String,
    name: String,
    file_name: String,
    mime_type: String,
    disk: String,
    conversions_disk: String,
    size: Number,
    created_by_id: String,
    created_at: Date,
    updated_at: Date,
    original_url: String,
  },
  size_chart_image: {
    id: Number,
    collection_name: String,
    name: String,
    file_name: String,
    mime_type: String,
    disk: String,
    conversions_disk: String,
    size: Number,
    created_by_id: String,
    created_at: Date,
    updated_at: Date,
    original_url: String,
  },
  reviews: [Object], // Can be further detailed if needed
  store: {
    id: Number,
    store_name: String,
    description: String,
    slug: String,
    store_logo_id: Number,
    store_cover_id: Number,
    country_id: Number,
    state_id: Number,
    city: String,
    address: String,
    pincode: String,
    facebook: String,
    twitter: String,
    instagram: String,
    youtube: String,
    pinterest: String,
    hide_vendor_email: Boolean,
    hide_vendor_phone: Boolean,
    vendor_id: Number,
    created_by_id: String,
    status: Number,
    is_approved: Boolean,
    created_at: Date,
    updated_at: Date,
    deleted_at: Date,
    orders_count: Number,
    reviews_count: Number,
    products_count: Number,
    product_images: [String],
    order_amount: Number,
    rating_count: Number,
    store_logo: {
      id: Number,
      collection_name: String,
      name: String,
      file_name: String,
      mime_type: String,
      disk: String,
      conversions_disk: String,
      size: Number,
      created_by_id: String,
      created_at: Date,
      updated_at: Date,
      original_url: String,
    },
    store_cover: Object,
    vendor: {
      id: Number,
      name: String,
      email: String,
      country_code: String,
      phone: Number,
      profile_image_id: Number,
      system_reserve: Boolean,
      status: Number,
      created_by_id: Number,
      email_verified_at: Date,
      created_at: Date,
      updated_at: Date,
      deleted_at: Date,
      orders_count: Number,
      role: {
        id: Number,
        name: String,
        guard_name: String,
        system_reserve: Boolean,
        created_at: Date,
        updated_at: Date,
        pivot: {
          model_id: String,
          role_id: String,
          model_type: String,
        },
      },
      point: Number,
      wallet: Number,
      address: [Object],
      vendor_wallet: {
        id: Number,
        vendor_id: Number,
        balance: Number,
        created_at: Date,
        updated_at: Date,
        deleted_at: Date,
      },
      profile_image: Object,
      payment_account: Object,
    },
    country: {
      id: Number,
      name: String,
      currency: String,
      currency_symbol: String,
      iso_3166_2: String,
      iso_3166_3: String,
      calling_code: String,
      flag: String,
    },
    state: {
      id: Number,
      name: String,
      country_id: Number,
      created_at: Date,
      updated_at: Date,
    },
    reviews: [Object],
  },
  tax: {
    id: Number,
    name: String,
    rate: Number,
    status: Number,
    created_by_id: String,
    created_at: Date,
    updated_at: Date,
    deleted_at: Date,
  },
  categories: [CategorySchema],
  tags: [TagSchema],
  
}, { strict: false });




const Product = mongoose.model("Product", ProductSchema, 'products');

module.exports = Product;
